# Set modern flow state and assign to owner according config file

# Run manually
trigger: none

resources:
  repositories:
    # Add a reference to the pipelinetemplates repository where all the templates are located
    # No need to clone them, the templates can be referenced directly
    - repository: pipelinetemplates
      type: github
      name: DIGITALLNature/DigitallPipelines

      # By default the default branch is used. If this is not the same default between projects
      # (for most it is main, but for some it still is master) or a different one should be
      # used, the ref mus be set:
      # ref: refs/heads/preview
      # ref: refs/heads/master

# By default use an ubuntu image
pool:
  vmImage: ubuntu-latest

parameters:
  - name: target
    displayName: Target environment to affect
    type: string
    default: Prod
    values:
      - Development
      - Test
      - Production

# Use default variable groups (see /docs/variable-groups.md) namely the variables:
# - PowerPlatformUrl
# - PowerPlatformServiceConnectionName
# - PowerPlatformServiceConnectionType
#
# In combination with the target parameter that can be selected change to the corresponding variable
#   groups for the different environments.
# This section should be adjusted to fit the parameters
variables:
  # Variable groups related to target: Development
  - ${{ if eq(parameters.target, 'Development') }}:
    - group: Power Platform Environment Development
    - group: Power Platform Deployment Connection
    - name: WorkflowConfigFile
      value: config.json

    # Variable groups related to target: Test
  - ${{ if eq(parameters.target, 'Test') }}:
    - group: Power Platform Environment Test
    - group: Power Platform Deployment Connection
    - name: WorkflowConfigFile
      value: config.json

    # Variable groups related to target: Production
  - ${{ if eq(parameters.target, 'Production') }}:
    - group: Power Platform Environment Production
    - group: Power Platform Deployment Connection
    - name: WorkflowConfigFile
      value: config.json

# Prepare and run tool
steps:
  # Prepare dgtp tooling
  - template: ../dgtp/install.yml
  - template: ../xrm-connection/build-connectionstring-from-service-connection.yml@pipelinetemplates
    parameters:
      outputVariableName: dgtp:xrm:connection
      serviceConnection: $(PowerPlatformServiceConnectionName)
      serviceConnectionType: $(PowerPlatformServiceConnectionType)

  # Update flow states
  - template: ../dgtp-maintenance/set-workflow-state.yml
    parameters:
      config: $(WorkflowConfigFile)